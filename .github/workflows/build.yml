name: Build
run-name: build
on:
  push:
    branches:
      - main
      - update-runner-image

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"
  CARGO_INCREMENTAL: "0"
  DATABASE_URL: "sqlite://docker-build.db?mode=rwc"
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io
jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: musl-tools g++-mingw-w64-x86-64-posix gcc-mingw-w64-x86-64-posix protobuf-compiler libapparmor-dev libdevmapper-dev libglib2.0-dev libgpgme-dev libseccomp-dev libselinux1-dev netavark
          version: 1.3
      - run: sudo ln -sfv /usr/bin/x86_64-w64-mingw32-gcc-posix /usr/bin/x86_64-w64-mingw32-gcc
      - run: sudo ln -sfv /usr/bin/x86_64-w64-mingw32-g++-posix /usr/bin/x86_64-w64-mingw32-g++
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          fetch-tags: true
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo install sqlx-cli --no-default-features --features rustls,sqlite
      - run: sqlx migrate run
      - run: cargo build --profile release-lto --target x86_64-unknown-linux-musl
      - run: cargo build --profile release-lto --target x86_64-pc-windows-gnu
      - run: mkdir build && mv target/x86_64-unknown-linux-musl/release-lto/meshstellar build/meshstellar-linux-x86_64 && mv target/x86_64-pc-windows-gnu/release-lto/meshstellar.exe build/meshstellar-windows-x86_64.exe && mv meshstellar.toml.example build
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            build
  build-container:
    needs: build
    runs-on: ubuntu-24.04
    permissions:
      packages: write
      contents: read
    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: musl-tools g++-mingw-w64-x86-64-posix gcc-mingw-w64-x86-64-posix protobuf-compiler libapparmor-dev libdevmapper-dev libglib2.0-dev libgpgme-dev libseccomp-dev libselinux1-dev netavark
          version: 1.3
      - name: Check out Containerfile.github
        uses: actions/checkout@v4
        with:
          sparse-checkout: 'Containerfile.github'
      - uses: actions/download-artifact@v4
        with:
          name: build
      - name: Display structure of downloaded files
        run: ls -R
      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}
      - name: Upgrade Buildah
        run: |
          git clone -b v1.35.4 --depth=1 https://github.com/containers/buildah.git ~/go/src/github.com/containers/buildah
          pushd ~/go/src/github.com/containers/buildah
          make buildah docs
          sudo make install
          buildah version
          popd
      - name: Download youki
        run: |
          wget https://github.com/containers/youki/releases/download/v${VERSION}/youki-${VERSION}-x86_64-musl.tar.gz
          tar xOf youki-${VERSION}-x86_64-musl.tar.gz youki > /opt/youki
          rm -f youki-${VERSION}-x86_64-musl.tar.gz
          chmod +x /opt/youki
        env:
          VERSION: 0.3.2
      - run: sudo buildah build --dns=1.1.1.1 --tag ghcr.io/jurriaan/meshstellar:latest -f Containerfile.github .
        env:
          BUILDAH_RUNTIME: /opt/youki
      - run: sudo buildah tag ghcr.io/jurriaan/meshstellar:latest ghcr.io/jurriaan/meshstellar:${{ github.sha }}
      - run: sudo buildah push ghcr.io/jurriaan/meshstellar:${{ github.sha }}
      - run: sudo buildah push ghcr.io/jurriaan/meshstellar:latest

